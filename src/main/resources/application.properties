# ===============================
# = DATA SOURCE
# ===============================
# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "kcsl_server_db" as database name and 
# "root" as username and password.

#MairaDB URL=jdbc:mariadb://localhost:3305/springboot_mariadb, Mysql URL=jdbc:mysql://localhost:3306/kcsl_server_db
spring.datasource.url = jdbc:mysql://localhost:3306/kcsl_server_springboot?createDatabaseIfNotExist=true&useSSL=false&zeroDateTimeBehavior=convertToNull
spring.datasource.username = root
#spring.datasource.password = root
#maira bd driver=org.mariadb.jdbc.Driver, mysql driver=com.mysql.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, update,validate)
spring.jpa.hibernate.ddl-auto = update
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL57Dialect
spring.jpa.hibernate.format_sql=true
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.id.new_generator_mappings=false

# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?